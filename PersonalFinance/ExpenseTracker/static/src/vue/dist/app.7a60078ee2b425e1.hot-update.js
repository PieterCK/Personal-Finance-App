"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdatefrontend"]("app",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/components/ViewTransactionsLabeling/TransactionsTable.vue?vue&type=script&lang=js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/components/ViewTransactionsLabeling/TransactionsTable.vue?vue&type=script&lang=js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ \"./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _YesNoModal_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../YesNoModal.vue */ \"./src/components/YesNoModal.vue\");\n/* harmony import */ var _TableHeaderCard_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TableHeaderCard.vue */ \"./src/components/TableHeaderCard.vue\");\n/* harmony import */ var _SnackBar_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SnackBar.vue */ \"./src/components/SnackBar.vue\");\n/* harmony import */ var _WarningModal_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../WarningModal.vue */ \"./src/components/WarningModal.vue\");\n\n\n\n\n\n\n\nconst baseUrl = \"http://127.0.0.1:9015/\";\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    YesNoModal: _YesNoModal_vue__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    TableHeaderCard: _TableHeaderCard_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    SnackBar: _SnackBar_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    WarningModal: _WarningModal_vue__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n  },\n  data() {\n    return {\n      attrs: {\n        class: 'mb-6',\n        boilerplate: true,\n        elevation: 2\n      },\n      dialog: false,\n      formIsValid: true,\n      headers: [{\n        title: 'Transaction',\n        align: 'start',\n        sortable: false,\n        key: 'info'\n      }, {\n        title: 'Amount (IDR)',\n        align: 'start',\n        sortable: true,\n        key: 'amount'\n      }, {\n        title: 'Date',\n        align: 'start',\n        sortable: true,\n        key: 'date'\n      }, {\n        title: 'Detail',\n        align: 'start',\n        sortable: false,\n        key: 'details'\n      }, {\n        title: 'Category',\n        align: 'start',\n        sortable: true,\n        key: \"category\"\n      }, {\n        title: 'Status',\n        align: 'start',\n        sortable: true,\n        key: \"status\"\n      }],\n      items: [],\n      categories: [],\n      selectAll: false,\n      yesNoModalObj: {\n        trigger: false,\n        dialog: {\n          title: \"New Transactions\",\n          text: \"Looks like you just uploaded a bankstatement, want to label transactions from that bankstatement?\"\n        }\n      },\n      snackBarObj: {\n        trigger: false,\n        dialog: \"Please select and label transactions first!\"\n      },\n      tableIsLoading: false\n    };\n  },\n  props: {\n    cached_items: null,\n    account_types: null\n  },\n  methods: {\n    getTransaction() {\n      axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].defaults.headers.common['X-CSRFToken'] = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('csrftoken');\n      const getTransactionsUrl = `${baseUrl}transactions`;\n      axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].get(getTransactionsUrl).then(response => {\n        // Process the response data\n        return response.data;\n      }).catch(error => {\n        // Handle any error that occurs\n        console.error(error);\n      });\n    },\n    postTransactions() {\n      axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].defaults.headers.common['X-CSRFToken'] = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('csrftoken');\n      const CRUDBankstatementAPI = `${baseUrl}CRUDBankstatementAPI`;\n      const formData = new FormData();\n      formData.append('input_value', this.input_values);\n      axios__WEBPACK_IMPORTED_MODULE_6__[\"default\"].post(CRUDBankstatementAPI).then(response => {\n        // Process the response data\n        let data = response.data;\n        console.log(data);\n        return data;\n      }).catch(error => {\n        // Handle any error that occurs\n        console.error(error);\n      });\n    },\n    getCachedTransactions() {\n      this.items = this.cached_items;\n      this.dialog = false;\n    },\n    toggleAllCheckboxes() {\n      this.items.forEach(item => {\n        item.select = this.selectAll;\n      });\n    },\n    formatPrice(value) {\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n    processCategorySelect(account_types) {\n      let categories = [{\n        key: null,\n        name: null\n      }];\n      account_types.forEach(category => categories.push({\n        key: category,\n        name: category\n      }));\n      this.categories = categories;\n    },\n    validateForm() {\n      this.tableIsLoading = true;\n      let safeToSubmit = true;\n      const NO_ITEM_SELECTED = this.items.filter(item => item.select).length < 1;\n      const NO_ITEM = this.items.length < 1;\n      if (NO_ITEM || NO_ITEM_SELECTED) {\n        this.snackBarObj.trigger = true;\n        this.tableIsLoading = false;\n      }\n      this.items.forEach(item => {\n        if (item.select) {\n          item.error = !item.account_type;\n          safeToSubmit = item.account_type;\n        }\n      });\n      this.formIsValid = safeToSubmit;\n    }\n  },\n  mounted() {\n    this.cached_items ? this.$refs.loadCachedItemModal.toggleModal(true) : this.processCategorySelect(this.account_types);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/components/ViewTransactionsLabeling/TransactionsTable.vue?vue&type=script&lang=js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "c3211b34f4d29e14"; }
/******/ }();
/******/ 
/******/ }
);